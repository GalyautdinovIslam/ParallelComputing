// На нулевом процессе задан массив целых чисел, который является двоичным представлением десятичного числа.
// Написать параллельную программу вычисления десятичного числа из заданного двоичного представления.
// int a[30] = {1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1};
// Число x может быть представлено в системе с основанием p, как x = an*pn+an-1*pn-1+ a1*p1+a0*p0,
// где an ... a0 — цифры в представлении данного числа.

#include <iostream>

int main() {
    const int I = 30;
    int a[I] = {1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1};
    int x = 0;

    #pragma omp parallel for schedule(guided, 4) reduction(+: x)
    for (int i = 0; i < I; i++) {
        if (a[i] == 1) x += 1 << (I - i - 1);
    }

    std::cout << "x = " + std::to_string(x) + "\n";

    return 0;
}
